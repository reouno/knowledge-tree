server {
    listen 80;
    listen [::]:80;
    server_name your.domain;
    server_tokens off;

    client_max_body_size 100m;

    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location = /health-check.html {
        empty_gif;
        access_log off;
        break;
    }

    location = /front-health-check {
        proxy_pass http://front:3001;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name your.domain;

    ssl_certificate /etc/letsencrypt/live/your.domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your.domain/privkey.pem;

    charset utf-8;

    client_max_body_size 100m;

    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    location /static {
        alias /home/app/web/staticfiles;
    }

    location ~ ^/(api|admin)/ {
        proxy_pass                          http://api:8000;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host               $host;
        proxy_redirect                      off;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }

    # For Websocket endpoints in QuickML
    location ~ ^/quick-ml/api/.*/ws$ {
        proxy_pass                          http://qml:8001;
        proxy_http_version                  1.1;
        proxy_set_header                    Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # For QuickML
    location ~ ^/quick-ml/ {
        proxy_pass                          http://qml:8001;
        proxy_http_version                  1.1;
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         $connection_upgrade;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host               $host;
        proxy_redirect                      off;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }

    location / {
        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://front:3000;
    }
}
